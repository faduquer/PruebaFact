@model PagedList.IPagedList<PruebaFact.Models.Guia>
@using PagedList.Mvc;
@using System.Web;

@{
    ViewBag.Title = "Index";
}

<h3>Guías</h3>

<p>
    <a href="@Url.Action("Create", "Guia")" class="btn btn-primary">
        <i class="glyphicon glyphicon-plus"></i>
        <strong>Agregar</strong>
    </a>
</p>
@using (Html.BeginForm("Index", "Guia", FormMethod.Get))
{
    <p>
        Buscar por Nro Guía: @Html.TextBox("busquedaNumeroGuia", ViewBag.actgualNumeroGuia as string)
        Buscar por Factura: @Html.TextBox("busquedaIdFactura", ViewBag.actgualIdFactura as string)
        <input type="submit" value="Buscar" />
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink(HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.FirstOrDefault().NumeroGuía).ToHtmlString()), "Index", new { sortOrder = ViewBag.NumeroGuiaSortParm, actgualNumeroGuia = ViewBag.actgualNumeroGuia, actgualIdFactura = ViewBag.actgualIdFactura })
        </th>
        <th>
            @Html.ActionLink(HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.FirstOrDefault().FechaEnvio).ToHtmlString()), "Index", new { sortOrder = ViewBag.FechaEnvioSortParm, actgualNumeroGuia = ViewBag.actgualNumeroGuia, actgualIdFactura = ViewBag.actgualIdFactura })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().PaisDestino)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().NombreRemitente)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().PaisDestino)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().NombreDestinatario)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Total)
        </th>
        <th>
            @Html.ActionLink(HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.FirstOrDefault().Factura.ID).ToHtmlString()), "Index", new { sortOrder = ViewBag.IdFacturaSortParm, actgualNumeroGuia = ViewBag.actgualNumeroGuia, actgualIdFactura = ViewBag.actgualIdFactura })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink(" " + item.NumeroGuía, "Edit", new { id = item.ID }, new { @class = "glyphicon glyphicon-pencil" })
            </td>

            <td>
                @item.FechaEnvio.ToString("dd-MM-yyyy")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PaisOrigen)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NombreRemitente)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PaisDestino)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NombreDestinatario)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Total)
            </td>
            <td>
                @if (item.Factura != null)
                {
                    @Html.ActionLink(" " + item.Factura.ID.ToString(), "Details", "Factura", new { id = item.Factura.ID }, new { @class = "glyphicon glyphicon-eye-open" })
                }
            </td>
            <td>
                @Html.ActionLink(" ", "Details", new { id = item.ID }, new { @class = "glyphicon glyphicon-eye-open" })
                @*
        @Html.ActionLink(" ", "Delete", new { id = item.ID }, new { @class = "glyphicon glyphicon-trash", onclick = "return confirm('Are you sure you want to remove " + @item.ID + " to list ?');" })
                *@
                @Html.ActionLink(" ", "Delete", new { id = item.ID }, new { @class = "glyphicon glyphicon-trash" })
            </td>
        </tr>
    }

</table>
<br />
Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, actgualNumeroGuia = ViewBag.actgualNumeroGuia, actgualIdFactura = ViewBag.actgualIdFactura }))